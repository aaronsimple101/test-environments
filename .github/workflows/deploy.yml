name: Deploy to Environments

on:
  push:
    branches:
      - 'v2024.*'  # Automatically trigger on version branches
    tags:
      - 'v2024.*'  # Automatically trigger on version tags

  workflow_dispatch:
    inputs:
      version_branch:
        description: 'Version branch to deploy (e.g., v2024.18)'
        required: true
      environment_name:
        description: 'Target environment (e.g., dev, stg, prod)'
        required: true

jobs:
  deploy:
    name: Deploy to ${{ inputs.environment_name }} environment
    runs-on: ubuntu-latest

    # Map environments in GitHub (dev, stg, prod)
    environment:
      name: ${{ inputs.environment_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Set version and environment
        id: set_envs
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION_BRANCH="${{ inputs.version_branch }}"
            ENVIRONMENT="${{ inputs.environment_name }}"
          elif [ "${{ github.ref_type }}" == "tag" ]; then
            VERSION_BRANCH="${{ github.ref_name }}"
            ENVIRONMENT="prod"  # Default to prod for tags
          else
            VERSION_BRANCH="${{ github.ref_name }}"
            ENVIRONMENT="dev"  # Default to dev for branch pushes
          fi
          echo "Deploying $VERSION_BRANCH to $ENVIRONMENT"
          echo "::set-output name=version_branch::$VERSION_BRANCH"
          echo "::set-output name=environment::$ENVIRONMENT"

      - name: Deploy to environment
        run: |
          echo "Deploying ${{ steps.set_envs.outputs.version_branch }} to ${{ steps.set_envs.outputs.environment }} environment"
          # Add your actual deployment logic here (SSH, deploy script, etc.)

      - name: Notify Success
        if: success()
        run: |
          echo "Deployment to ${{ steps.set_envs.outputs.environment }} successful!"

  track-deployment:
    name: Track Deployment Status
    runs-on: ubuntu-latest
    needs: deploy
    environment:
      name: ${{ steps.set_envs.outputs.environment }}

    steps:
      - name: Create Deployment
        uses: octokit/request-action@v2.x
        id: create_deployment
        with:
          route: POST /repos/${{ github.repository }}/deployments
          environment: ${{ steps.set_envs.outputs.environment }}
          ref: ${{ steps.set_envs.outputs.version_branch }}
          description: "Deploying ${{ steps.set_envs.outputs.version_branch }} to ${{ steps.set_envs.outputs.environment }}"

      - name: Update Deployment Status
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/deployments/${{ steps.create_deployment.outputs.id }}/statuses
          state: success
          environment: ${{ steps.set_envs.outputs.environment }}
          description: "Deployment to ${{ steps.set_envs.outputs.environment }} successful!"
